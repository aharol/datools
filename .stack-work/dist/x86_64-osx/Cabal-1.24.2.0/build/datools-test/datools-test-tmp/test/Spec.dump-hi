
==================== FINAL INTERFACE ====================
2017-02-12 07:30:50.327615 UTC

interface main@main:Main 8002
  interface hash: dec7cd2726e1739e6d240e2af7ea9f2f
  ABI hash: 4249eb904391c064e235a41a969dd20e
  export-list hash: 94a10f1fa2823ca54c6379aa440ae942
  orphan hash: 65c1f56d80cb5fa37939ffb02c37c70d
  flag hash: c8ab66eeca98ee7522e7f21b342ec19f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-3GSHFrIr1fs45bsgKkZbLF
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      datools-0.1.0.0@datools-0.1.0.0-Liiqe4AOY4e5U6XV99USYi
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.2@ghc-boot-th-8.0.2
                      ghc-prim-0.5.0.0 hostname-1.0@hostname-1.0-LHxcvBDHWay1RGMj1Uzenf
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa
                      regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO
                      template-haskell-2.11.1.0
                      test-framework-0.8.1.1@test-framework-0.8.1.1-7YvscNBXXw5Lj2Ypw31c2N
                      test-framework-hunit-0.3.0.2@test-framework-hunit-0.3.0.2-ItCdzJs3gi27V64u8RQwaC
                      test-framework-quickcheck2-0.3.0.3@test-framework-quickcheck2-0.3.0.3-3BvhXUbVGHg7IQrkbhC6DS
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      xml-1.3.14@xml-1.3.14-AkPhBHkEQzoJK5yH4ot8y
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa:Text.Regex.Base.Context
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.String
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
import  -/  HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI:Test.HUnit 430ab81af3668b12bae4950025858f90
import  -/  HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI:Test.HUnit.Base cd997e8ff65c19ac22867304478c3a62
import  -/  HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI:Test.HUnit.Lang 9ab538688b5ed60ffdede50aabf29dd6
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9:Test.QuickCheck 5d7cb5b36e5406469ab226c41cc67877
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9:Test.QuickCheck.Property 9f5286c0aef626ffc0bbdb9b0ea85ee4
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  datools-0.1.0.0@datools-0.1.0.0-Liiqe4AOY4e5U6XV99USYi:Utils 3a63083e4e90f581c249d30e406c8175
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  test-framework-0.8.1.1@test-framework-0.8.1.1-7YvscNBXXw5Lj2Ypw31c2N:Test.Framework 86327bb3657a8abf964fa67a1d937456
import  -/  test-framework-0.8.1.1@test-framework-0.8.1.1-7YvscNBXXw5Lj2Ypw31c2N:Test.Framework.Runners.Console d9a4d12f62ca0632030aa1dfafeaa8c6
import  -/  test-framework-hunit-0.3.0.2@test-framework-hunit-0.3.0.2-ItCdzJs3gi27V64u8RQwaC:Test.Framework.Providers.HUnit 8e6a3c05966e4c62c8511117809a4240
import  -/  test-framework-quickcheck2-0.3.0.3@test-framework-quickcheck2-0.3.0.3-3BvhXUbVGHg7IQrkbhC6DS:Test.Framework.Providers.QuickCheck2 758893b15fa93c9a371a130c5921c287
83642834dfadf4b8b4e464c619a46a4d
  $s$fArbitrary[]_$s$fArbitrary[]_$cshrink ::
    [GHC.Types.Int] -> [[GHC.Types.Int]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (xs :: [GHC.Types.Int]) ->
                 Test.QuickCheck.Arbitrary.shrinkList
                   @ GHC.Types.Int
                   Test.QuickCheck.Arbitrary.$fArbitraryInt_$cshrink
                   xs) -}
cc593064fe9f8f3e4e3ed126dc4f0072
  $s$fEq[] :: GHC.Classes.Eq [GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Integer.Type.Integer]
                  (GHC.Classes.$fEq[]_$c==
                     @ GHC.Integer.Type.Integer
                     GHC.Integer.Type.$fEqInteger)
                  Main.$s$fEq[]_$s$fEq[]_$c/= -}
ef76c5324b6a8250d4e2ed8d61418d95
  $s$fEq[]_$s$fEq[]_$c/= ::
    [GHC.Integer.Type.Integer]
    -> [GHC.Integer.Type.Integer] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [GHC.Integer.Type.Integer])
                   (y :: [GHC.Integer.Type.Integer]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ GHC.Integer.Type.Integer
                      GHC.Integer.Type.$fEqInteger
                      x
                      y)) -}
c9bd0980a69526c690fef9263b227e77
  $s$fShow[] :: GHC.Show.Show [GHC.Integer.Type.Integer]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Integer.Type.Integer]
                  Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
                  Main.$s$fShow[]_$s$fShow[]_$cshow
                  Main.$s$fShow[]_$s$fShow[]_$cshowList -}
49cfbb168e715650cf28a5cc22ad9b32
  $s$fShow[]_$s$fShow[]_$cshow ::
    [GHC.Integer.Type.Integer] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [GHC.Integer.Type.Integer]) ->
                 GHC.Show.$fShowInteger_$cshowList
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1e3901a9e5e5f94fd4e8e4005a7ab82b
  $s$fShow[]_$s$fShow[]_$cshowList ::
    [[GHC.Integer.Type.Integer]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[GHC.Integer.Type.Integer]])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [GHC.Integer.Type.Integer]
                   GHC.Show.$fShowInteger_$cshowList
                   eta
                   eta1) -}
7a2291d323983e0b4bb27a5cdd283a40
  $s$fShow[]_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [GHC.Integer.Type.Integer] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [GHC.Integer.Type.Integer])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.$fShowInteger_$cshowList eta eta1) -}
b3608a9b7d8c31be878b5247329c8c4b
  $stestProperty1 ::
    ([GHC.Types.Int] -> Test.QuickCheck.Property.Property)
    -> Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 3, Strictness: <L,C(U)><L,U(U,U,U,U,A,A)><L,U>,
     Unfolding: (\ (f :: [GHC.Types.Int]
                         -> Test.QuickCheck.Property.Property)
                   (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 Test.QuickCheck.Property.$fTestable(->)2
                   @ [GHC.Types.Int]
                   @ Test.QuickCheck.Property.Property
                   GHC.Show.$fShow[]_$s$fShow[]
                   Test.QuickCheck.Property.$fTestable(->)6
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R Trans
                                  (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                            (Test.QuickCheck.Property.N:Prop[0])))
                                  (Sym (Test.QuickCheck.Property.N:Property[0])))
                        (Sym (Test.QuickCheck.Property.N:Testable[0]
                                  <Test.QuickCheck.Property.Property>_N)))
                   Main.$stestProperty2
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <[GHC.Types.Int]>_R))
                   Main.$s$fArbitrary[]_$s$fArbitrary[]_$cshrink
                   f
                   eta
                   eta1) -}
8aead27938ab80c078437488ab71416e
  $stestProperty2 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> [GHC.Types.Int]
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Test.QuickCheck.Random.QCGen) (eta1 :: GHC.Types.Int) ->
                 case eta1 of ww { GHC.Types.I# ww1 ->
                 Test.QuickCheck.Gen.$wlistOf
                   @ GHC.Types.Int
                   Test.QuickCheck.Arbitrary.$fArbitraryInt3
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Int>_R))
                   eta
                   ww1 }) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
4cdfe92c5812523e5fe9b9b74118d6fc
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
79c18c891e2720ce0dc05261ef41980f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w2 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 Test.Framework.Runners.Console.$wdefaultMainWithOpts
                   Main.main2
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ Test.Framework.Options.TestOptions)
                   (GHC.Base.Nothing
                      @ [Test.Framework.Runners.TestPattern.TestPattern])
                   (GHC.Base.Nothing @ (GHC.Base.Maybe GHC.IO.FilePath))
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   (GHC.Base.Nothing @ Test.Framework.Runners.Options.ColorMode)
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   w2) -}
cd974bd704cfa89f5dcaf2f7dc0e7d9e
  main10 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main18
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main16
                   Main.main11) -}
0f2b0c9fda13d69ca548ccc854de1811
  main11 :: GHC.Types.Double
  {- Unfolding: (Utils.mean
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   GHC.Float.$fRealDouble
                   GHC.Float.$fFractionalDouble
                   Main.main12) -}
4f089006ff7c08822e4098d9225f7d74
  main12 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main17
                   Main.main13) -}
242d6c3c476ebae887cab58ec19ae5f4
  main13 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main16
                   Main.main14) -}
f027f053d70a0f23d5d38211ea0beab3
  main14 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main15
                   (GHC.Types.[] @ GHC.Types.Double)) -}
4e9cbba8a26e849d073a0ff0c01f1e69
  main15 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 3.0##) -}
f756d02892b1f110083f9d953d615155
  main16 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 2.0##) -}
a29b551ee17b84780ae5b65e81a23120
  main17 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.0##) -}
f4ea629e414f3a2c4973aa0a0eaa7355
  main18 ::
    GHC.Base.String
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Types.Double
                   Main.main19
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEqDouble
                   GHC.Float.$fShowDouble) -}
3692a96ac3acc4ae6878163115072252
  main19 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main20) -}
86ece84bfa107d69f3ffaa173ea086ed
  main2 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.main30
                   Main.main3) -}
4921c0c1639b873d65ccc480fa6e3e36
  main20 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main28
                   Main.main21
                   GHC.Stack.Types.EmptyCallStack) -}
9e04836013e7d0ef49f322f8486f9288
  main21 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main27
                   Main.main26
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main24
                   Main.main22) -}
b090060c65f310b81d1b4ba6c0e9cf74
  main22 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40#) -}
6d4bc79d60c22098a930321a136ffca8
  main23 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 12#) -}
ab5c567a9e87c7b7e54f0b298ee35465
  main24 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 23#) -}
346c617fe7ba648d5229e32d8d29483a
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Spec.hs"#) -}
140a29f7e6cad08e97b34aa6d76e010c
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
6af53daf5eb92810b13e92dfb6726aac
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
448510c9d52deeb132434896af738bdf
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "@?="#) -}
0df586ce3119ddffe7a5b2d928ff84eb
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "mean"#) -}
26dab2e959f8bb1687811c7b4de6dfb3
  main3 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.main9
                   Main.main4) -}
ce3573c7100bec249554e8c3e6de18ed
  main30 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.main49
                   Main.main31
                     `cast`
                   (Sym (Test.Framework.Providers.HUnit.N:TestCase[0]))) -}
76f7c24f77658f0ae5eb9e7cb94b74bd
  main31 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main42
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main39
                   Main.main32) -}
f1e22a31ae82c72db9159e6dee8eeea4
  main32 :: [GHC.Integer.Type.Integer]
  {- Unfolding: (GHC.List.reverse1
                   @ GHC.Integer.Type.Integer
                   Main.main33
                   (GHC.Types.[] @ GHC.Integer.Type.Integer)) -}
345ae92e3200188159a823642783ac9d
  main33 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main38
                   Main.main34) -}
9ad6249b4532ce95b33cd8bb39cad2cd
  main34 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main37
                   Main.main35) -}
332652cdd46f0f5d6a9a7929ec52a493
  main35 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main36
                   (GHC.Types.[] @ GHC.Integer.Type.Integer)) -}
77c7ea1f46aa8caf4105a5faa1a3897d
  main36 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
2d0e99487cabc7a6cc4167b3ab93f07e
  main37 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
fc6e4788250985a8c3673af813ef47bf
  main38 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
a28897cd379b2cfef12ae8f13abec63b
  main39 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main36
                   Main.main40) -}
10b4e4d2947c7b39eae494641ca8aa6e
  main4 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.main5
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
246e564a4bc1ef36fe4379f2e1e5d29d
  main40 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main37
                   Main.main41) -}
60a7984ddabbbe45eda814bdc54eec16
  main41 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Main.main38
                   (GHC.Types.[] @ GHC.Integer.Type.Integer)) -}
fdbd110988fd1cc1a51fce42bb8bdc98
  main42 ::
    GHC.Base.String
    -> [GHC.Integer.Type.Integer]
    -> [GHC.Integer.Type.Integer]
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ [GHC.Integer.Type.Integer]
                   Main.main43
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEq[]
                   Main.$s$fShow[]) -}
b176d2241f6026d510541e05f5ed01a5
  main43 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main44) -}
35b3374ba24e872caed9c4b37dbdb52f
  main44 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main28
                   Main.main45
                   GHC.Stack.Types.EmptyCallStack) -}
f7a9d33e21250ae0405e0f73ad108352
  main45 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main27
                   Main.main26
                   Main.main25
                   Main.main48
                   Main.main47
                   Main.main48
                   Main.main46) -}
dfcbd59180a3374c0bd0ce0e41fc09e2
  main46 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42#) -}
993acca7c4785d0f7f310d8795a0d9d2
  main47 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 11#) -}
b794e8253b0a9ae63a08bf5ae7ff9052
  main48 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 17#) -}
234d3b155748055d203c0dd580e06289
  main49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rev"#) -}
15183fbc8775ccceb1d36c99677fde64
  main5 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.QuickCheck2.PropertyTestCount
                   @ Test.Framework.Providers.QuickCheck2.PropertyResult
                   @ Test.Framework.Providers.QuickCheck2.Property
                   Test.Framework.Providers.QuickCheck2.$fTestlikeIntPropertyResultProperty
                   Test.Framework.Providers.QuickCheck2.testProperty1
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]
                             <*>_N <Test.Framework.Providers.QuickCheck2.Property>_N))
                   Main.main8
                   Main.main6) -}
b2f646b447bea03a9139d6a3d1cdde8c
  main50 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
32470424651e37c76c7cc2e439d51751
  main6 :: Test.Framework.Providers.QuickCheck2.Property
  {- Unfolding: (Test.Framework.Providers.QuickCheck2.Property
                   @ ([GHC.Types.Int] -> Test.QuickCheck.Property.Property)
                   Main.$stestProperty1
                     `cast`
                   (Trans
                        (<[GHC.Types.Int] -> Test.QuickCheck.Property.Property>_R
                         ->_R Trans
                                  (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                            (Test.QuickCheck.Property.N:Prop[0])))
                                  (Sym (Test.QuickCheck.Property.N:Property[0])))
                        (Sym (Test.QuickCheck.Property.N:Testable[0]
                                  <[GHC.Types.Int] -> Test.QuickCheck.Property.Property>_N)))
                   Main.main7) -}
a57f48cff8d64400ebe8e949e364212a
  main7 :: [GHC.Types.Int] -> Test.QuickCheck.Property.Property
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (xs :: [GHC.Types.Int]) ->
                 case xs of wild {
                   []
                   -> Test.QuickCheck.Property.$fTestableDiscard2
                        `cast`
                      (Trans
                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                     (Test.QuickCheck.Property.N:Prop[0])))
                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                   : ds1 ds2
                   -> let {
                        x1 :: Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
                        = Test.QuickCheck.Property.protectResults
                            (Test.QuickCheck.Property.MkRose
                               @ Test.QuickCheck.Property.Result
                               (case GHC.Classes.$fEq[]_$s$c==
                                       (GHC.List.reverse1
                                          @ GHC.Types.Int
                                          (GHC.List.reverse1
                                             @ GHC.Types.Int
                                             wild
                                             (GHC.Types.[] @ GHC.Types.Int))
                                          (GHC.Types.[] @ GHC.Types.Int))
                                       wild of wild1 {
                                  GHC.Types.False -> Test.QuickCheck.Property.counterexample1
                                  GHC.Types.True -> Test.QuickCheck.Property.succeeded })
                               (GHC.Types.[]
                                  @ (Test.QuickCheck.Property.Rose
                                       Test.QuickCheck.Property.Result)))
                      } in
                      (\ (ds :: Test.QuickCheck.Random.QCGen) (ds4 :: GHC.Types.Int) ->
                       x1)
                        `cast`
                      (Trans
                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                     (Test.QuickCheck.Property.N:Prop[0])))
                           (Sym (Test.QuickCheck.Property.N:Property[0]))) }) -}
012f5bf37ae9b3eba69a745fa469187f
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "listRevRevId"#) -}
e90236301b9487342c319f6f8f1353ff
  main9 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.main29
                   Main.main10
                     `cast`
                   (Sym (Test.Framework.Providers.HUnit.N:TestCase[0]))) -}
"SPEC/Main $fArbitrary[]_$cshrink @ Int" [ALWAYS] forall ($dArbitrary :: Test.QuickCheck.Arbitrary.Arbitrary
                                                                           GHC.Types.Int)
  Test.QuickCheck.Arbitrary.$fArbitrary[]_$cshrink @ GHC.Types.Int
                                                   $dArbitrary
  = Main.$s$fArbitrary[]_$s$fArbitrary[]_$cshrink
"SPEC/Main $fEq[] @ Integer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                        GHC.Integer.Type.Integer)
  GHC.Classes.$fEq[] @ GHC.Integer.Type.Integer $dEq = Main.$s$fEq[]
"SPEC/Main $fEq[]_$c/= @ Integer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                             GHC.Integer.Type.Integer)
  GHC.Classes.$fEq[]_$c/= @ GHC.Integer.Type.Integer $dEq
  = Main.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/Main $fShow[] @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                            GHC.Integer.Type.Integer)
  GHC.Show.$fShow[] @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShow[]
"SPEC/Main $fShow[]_$cshow @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                   GHC.Integer.Type.Integer)
  GHC.Show.$fShow[]_$cshow @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshow
"SPEC/Main $fShow[]_$cshowList @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                       GHC.Integer.Type.Integer)
  GHC.Show.$fShow[]_$cshowList @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowList
"SPEC/Main $fShow[]_$cshowsPrec @ Integer" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                        GHC.Integer.Type.Integer)
  GHC.Show.$fShow[]_$cshowsPrec @ GHC.Integer.Type.Integer $dShow
  = Main.$s$fShow[]_$s$fShow[]_$cshowsPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

